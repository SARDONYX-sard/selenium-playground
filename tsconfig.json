{
  "compilerOptions": {
    /* このファイルについての詳細は https://aka.ms/tsconfig.json を参照してください */

    /* 基本的なオプション */
    "target": "es2015" /* ECMAScript のターゲットバージョンを指定します: 'ES3' (デフォルト), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', または 'ESNEXT'. */,
    "module": "commonjs" /* モジュールコード生成の指定: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
    "lib": ["ESNext", "dom"] /* コンパイル時に組み込むライブラリファイルを指定します。*/,
    "allowJs": false /* javascript ファイルのコンパイルを許可します。*/,
    // "declaration": true, /* 対応する '.d.ts' ファイルを生成します。*/
    "outDir": "./lib" /* 出力構造をディレクトリにリダイレクトする。*/,
    "rootDir": "./src" /* 入力ファイルのルート・ディレクトリを指定する。--outDirで出力のディレクトリ構造を制御するために使用する。*/,
    // "removeComments": true, /* コメントを出力に出さない。*/
    // "isolatedModules": true, /* 各ファイルを個別のモジュールとしてトランスパイルする (ts.transpileModule'と同様)。*/

    /* 厳密なタイプチェックのオプション */
    "strict": true /* すべての厳密なタイプ・チェック・オプションを有効にします。*/,

    /* 追加チェック */
    // "noUnusedLocals": true, /* 未使用のローカルでエラーを報告する。*/
    // "noUnusedParameters": true, /* 未使用のパラメータに関するエラーを報告します。*/
    // "noImplicitReturns": true, /* 関数内の全てのコードパスが値を返さない場合にエラーを報告する。*/
    "noFallthroughCasesInSwitch": true, /* switch文のfallthroughケースのエラーを報告する。*/
    // "noUncheckedIndexedAccess": true, /* インデックス署名の結果に'undefined'を含める */*。
    // "noImplicitOverride": true, /* 派生クラスのメンバーをオーバーライドする際には、'override'修飾子を付ける。*/
    // "noPropertyAccessFromIndexSignature": true, /* インデックス署名から宣言されていないプロパティが要素アクセスを使用することを要求する。*/

    /* モジュール解決オプション */
    "moduleResolution": "node" /* モジュール解決方法の指定: 'node' (Node.js) 又は 'classic' (TypeScript pre-1.6). */,
    "baseUrl": "./" /* 絶対的でないモジュール名を解決するためのベースディレクトリを指定する。*/,
    // "types": [] /* コンパイル時にインクルードされる型宣言ファイル。*/,
    "esModuleInterop": true /* すべてのインポートに対して名前空間オブジェクトを作成することで、CommonJS と ES モジュール間のエミットの相互運用を可能にする。allowSyntheticDefaultImports' を暗示します。*/,

    /* 実験的なオプション */
    // "experimentalDecorators": true, /* ES7 デコレータを実験的にサポートします。*/
    // "emitDecoratorMetadata": true, /* デコレーターのタイプメタデータの出力を実験的にサポートします。*/

    /* 高度なオプション */
    "skipLibCheck": true /* 宣言ファイルの型チェックをスキップする。*/,
    "forceConsistentCasingInFileNames": true /* 同一ファイルへの不整合なケースの参照を許可しない。*/
  },
  "include": ["./src/**/*"],
  "exclude": ["node_modules", "./src/**/*.spec.ts"]
}
